public static readonly EscPosEncoder.EscPosBitmap yourreceipt = new()
{
    imageFormat = EscPosEncoder.ImageFormat.Rasters,
    width = 240,
    height = 40,
    monochrome = true,
    planeCount = 1,
    totalSize = 1201,
    planes = new EscPosEncoder.Plane[] {
        new EscPosEncoder.Plane {
            color = (byte)'1',
            data = new byte[] {
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x18, 0x00, 0x60, 0x1F, 0xE0, 0x18, 0x00, 0x61, 0xFF, 0xF0, 0x00, 0x03, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x3F, 0xC0, 0x3F, 0xFF, 0xC1, 0xF0, 0x7F, 0xFC, 0x07, 0xFF, 0xF8, 0x03,
                0xC0, 0x18, 0x00, 0x60, 0x3F, 0xF0, 0x18, 0x00, 0x61, 0xFF, 0xF8, 0x00, 0x03, 0xFF, 0xF0, 0x3F, 0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xFF, 0xC1, 0xF0, 0x7F, 0xFE, 0x07, 0xFF, 0xF8, 0x03,
                0xC0, 0x0C, 0x00, 0xC0, 0x70, 0x38, 0x18, 0x00, 0x61, 0x80, 0x1C, 0x00, 0x03, 0x00, 0x38, 0x30, 0x00, 0x00, 0xE0, 0x70, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x07, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x0C, 0x00, 0xC0, 0x60, 0x18, 0x18, 0x00, 0x61, 0x80, 0x0E, 0x00, 0x03, 0x00, 0x1C, 0x30, 0x00, 0x00, 0xC0, 0x38, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x03, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x06, 0x01, 0x80, 0xE0, 0x1C, 0x18, 0x00, 0x61, 0x80, 0x06, 0x00, 0x03, 0x00, 0x0C, 0x30, 0x00, 0x01, 0xC0, 0x18, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x01, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x06, 0x01, 0x80, 0xC0, 0x0C, 0x18, 0x00, 0x61, 0x80, 0x06, 0x00, 0x03, 0x00, 0x0C, 0x30, 0x00, 0x01, 0x80, 0x0C, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x01, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x03, 0x03, 0x00, 0xC0, 0x0C, 0x18, 0x00, 0x61, 0x80, 0x06, 0x00, 0x03, 0x00, 0x0C, 0x30, 0x00, 0x03, 0x80, 0x0C, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x01, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x03, 0x03, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0x06, 0x00, 0x03, 0x00, 0x0C, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x01, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x01, 0x86, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0x06, 0x00, 0x03, 0x00, 0x0C, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x01, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x01, 0x86, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0x0E, 0x00, 0x03, 0x00, 0x1C, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x03, 0x80, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0xCC, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0x1C, 0x00, 0x03, 0x00, 0x38, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x07, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0xCC, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0xFF, 0xF8, 0x00, 0x03, 0xFF, 0xF0, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x7F, 0xFE, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x78, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0xFF, 0xF0, 0x00, 0x03, 0xFF, 0xE0, 0x3F, 0xFF, 0x83, 0x00, 0x00, 0x3F, 0xFF, 0x80, 0xC0, 0x7F, 0xFC, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x78, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x83, 0x00, 0x00, 0x03, 0x06, 0x00, 0x3F, 0xFF, 0x83, 0x00, 0x00, 0x3F, 0xFF, 0x80, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x81, 0x80, 0x00, 0x03, 0x03, 0x00, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x81, 0x80, 0x00, 0x03, 0x03, 0x00, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0xC0, 0x00, 0x03, 0x01, 0x80, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0xC0, 0x00, 0x03, 0x01, 0x80, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x01, 0x80, 0x06, 0x18, 0x00, 0x61, 0x80, 0x60, 0x00, 0x03, 0x00, 0xC0, 0x30, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0xC0, 0x0C, 0x18, 0x00, 0x61, 0x80, 0x60, 0x00, 0x03, 0x00, 0xC0, 0x30, 0x00, 0x01, 0x80, 0x0C, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0xC0, 0x0C, 0x1C, 0x00, 0xE1, 0x80, 0x30, 0x00, 0x03, 0x00, 0x60, 0x30, 0x00, 0x01, 0x80, 0x0C, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0xE0, 0x1C, 0x0C, 0x00, 0xC1, 0x80, 0x30, 0x00, 0x03, 0x00, 0x60, 0x30, 0x00, 0x01, 0xC0, 0x18, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0x60, 0x18, 0x0E, 0x01, 0xC1, 0x80, 0x18, 0x00, 0x03, 0x00, 0x30, 0x30, 0x00, 0x00, 0xC0, 0x38, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0x70, 0x38, 0x07, 0x03, 0x81, 0x80, 0x1C, 0x00, 0x03, 0x00, 0x38, 0x30, 0x00, 0x00, 0xE0, 0x70, 0x30, 0x00, 0x00, 0xC0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0x3F, 0xF0, 0x03, 0xFF, 0x01, 0x80, 0x0E, 0x00, 0x03, 0x00, 0x1C, 0x3F, 0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xFF, 0xC1, 0xF0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x30, 0x00, 0x1F, 0xE0, 0x01, 0xFE, 0x01, 0x80, 0x0E, 0x00, 0x03, 0x00, 0x1C, 0x3F, 0xFF, 0xC0, 0x3F, 0xC0, 0x3F, 0xFF, 0xC1, 0xF0, 0x60, 0x00, 0x00, 0x0C, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
            }
        }
    }
};

enc.Initialize();
enc.TabStops = new byte[] { 35 };
enc.BasicPitch = new EscPosEncoder.MotionUnits() { horizontal = 180, vertical = 180 };

//System.Drawing.Image image = System.Drawing.Image.FromFile("ReceiptLOGO.bmp");
//EscPosEncoder.EscPosBitmap logo = (EscPosEncoder.EscPosBitmap)enc.ConvertEscPosBitmap(image, EscPosEncoder.ImageFormat.Rasters, 0, 0, EscPosEncoder.DithererType.None);
//enc.DefineGraphics(EscPosEncoder.BufferType.DownloadGraphics, logo, true, 1, 1, (byte)'A', (byte)'1');

using (MemoryStream ms = new(File.ReadAllBytes("SampleLogo.bmp")))
using (Bitmap bitmap = new(ms))
{
    EscPosEncoder.EscPosBitmap logo = EscPosEncoder.ConvertEscPosBitmap(bitmap, EscPosEncoder.ImageFormat.Rasters, 0, 0, EscPosEncoder.DithererType.None);
    enc.DefineGraphics(EscPosEncoder.BufferType.DownloadGraphics, logo, true, 1, 1, (byte)'A', (byte)'1');
}

//EscPosEncoder.EscPosBitmap data = new EscPosEncoder.EscPosBitmap();
//data.imageFormat = EscPosEncoder.ImageFormat.WindowsBMP;
//data.planeCount = 1;
//data.planes = new EscPosEncoder.Plane[] { new EscPosEncoder.Plane() { color = 0x31, data = File.ReadAllBytes("ReceiptLOGO.bmp") } };
//data.totalSize = data.planes[0].data.Length + 1;
//using (MemoryStream ms = new MemoryStream(data.planes[0].data))
//using (Bitmap bitmap = new Bitmap(ms))
//{
//    data.width = bitmap.Width;
//    data.height = bitmap.Height;
//    data.monochrome = (bitmap.PixelFormat == PixelFormat.Format1bppIndexed);
//}
//enc.DefineGraphics(EscPosEncoder.BufferType.DownloadGraphics, data, true, 1, 1, (byte)'A', (byte)'1');

enc.Justification = EscPosEncoder.Alignment.Center;

enc.PrintGraphics(EscPosEncoder.BufferType.DownloadGraphics, 1, 2, (byte)'A', (byte)'1');

enc.PrintAndFeed(EscPosEncoder.FeedType.Dots, 8);
enc.Printables("Thank you\x0a");
enc.Printables("NOVEMBER 1, 2012 15:00");
enc.PrintAndFeed(EscPosEncoder.FeedType.Lines, 3);

enc.Justification = EscPosEncoder.Alignment.Left;
enc.Printables("TM-Hxxx\t 6.00\x0a");
enc.Printables("PS-xxx\t 1.70\x0a\x0a");

enc.CharScale = new EscPosEncoder.Scale() { width = 1, height = 2 };
enc.Printables("TOTAL\t 7.70\x0a");
enc.CharScale = new EscPosEncoder.Scale() { width = 1, height = 1 };
enc.Printables("---------------------------------------\x0a");
enc.Printables("PAID\t 10.00\x0a");
enc.Printables("CHANGE\t 2.30\x0a");
enc.PrintAndFeed(EscPosEncoder.FeedType.Lines, 3);

enc.Justification = EscPosEncoder.Alignment.Center;
enc.Printables("<< Bonus points : 14 >>");
enc.PrintAndFeed(EscPosEncoder.FeedType.Dots, 35);
enc.D1BarcodeHeight = 50;
enc.D1BarcodeText = EscPosEncoder.HumanReadableIndicator.Below;
enc.D1BarcodeTextFontType = EscPosEncoder.FontType.B;
enc.D1BarcodeData = new EscPosEncoder.BarcodeData() { barcodeType = EscPosEncoder.BarcodeType.CODE39, data = Encoding.ASCII.GetBytes("*00014*") };

enc.CutPaper(EscPosEncoder.CutType.FeedAndPartialCut, 30);

//==================

enc.Initialize();
enc.TabStops = new byte[] { 35 };
enc.BasicPitch = new EscPosEncoder.MotionUnits() { horizontal = 180, vertical = 180 };

enc.DefineGraphics(EscPosEncoder.BufferType.DownloadGraphics, yourreceipt, true, 1, 1, (byte)'A', (byte)'1');

enc.Justification = EscPosEncoder.Alignment.Center;

enc.PrintGraphics(EscPosEncoder.BufferType.DownloadGraphics, 1, 2, (byte)'A', (byte)'1');

enc.PrintAndFeed(EscPosEncoder.FeedType.Dots, 8);
enc.Printables("Thank you\x0a");
enc.Printables("NOVEMBER 1, 2012 15:00");
enc.PrintAndFeed(EscPosEncoder.FeedType.Lines, 3);

enc.Justification = EscPosEncoder.Alignment.Left;
enc.Printables("TM-Hxxx\t 6.00\x0a");
enc.Printables("PS-xxx\t 1.70\x0a\x0a");

enc.CharScale = new EscPosEncoder.Scale() { width = 1, height = 2 };
enc.Printables("TOTAL\t 7.70\x0a");
enc.CharScale = new EscPosEncoder.Scale() { width = 1, height = 1 };
enc.Printables("---------------------------------------\x0a");
enc.Printables("PAID\t 10.00\x0a");
enc.Printables("CHANGE\t 2.30\x0a");
enc.PrintAndFeed(EscPosEncoder.FeedType.Lines, 3);

enc.Justification = EscPosEncoder.Alignment.Center;
enc.Printables("<< Bonus points : 14 >>");
enc.PrintAndFeed(EscPosEncoder.FeedType.Dots, 35);
enc.D1BarcodeHeight = 50;
enc.D1BarcodeText = EscPosEncoder.HumanReadableIndicator.Below;
enc.D1BarcodeTextFontType = EscPosEncoder.FontType.B;
enc.D1BarcodeData = new EscPosEncoder.BarcodeData() { barcodeType = EscPosEncoder.BarcodeType.CODE39, data = Encoding.ASCII.GetBytes("*00014*") };

enc.CutPaper(EscPosEncoder.CutType.FeedAndPartialCut, 30);
